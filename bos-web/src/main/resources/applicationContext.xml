<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:soap="http://cxf.apache.org/bindings/soap"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://cxf.apache.org/bindings/soap
						http://cxf.apache.org/schemas/configuration/soap.xsd
						http://cxf.apache.org/jaxws
						http://cxf.apache.org/schemas/jaxws.xsd">



    <!-- 加载属性文件 -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 配置LocalSessionFactoryBean，spring提供的用于整合hibernate的工厂bean -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 注入hibernate相关的属性配置 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
        <!-- 注入hibernate的映射文件 -->
        <property name="mappingLocations">
            <list>
                <value>classpath:com/heihe/domain/*.xml</value>
            </list>
        </property>
    </bean>
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 组件扫描 -->
    <context:component-scan base-package="com.heihe"/>

    <!-- 支持spring注解 -->
    <context:annotation-config/> <tx:annotation-driven/>

    <!-- 配置crm代理对象 http://39.106.104.216:8080/crm-bos/service/customer-->
    <!--<jaxws:client id="crmClient"-->
                  <!--serviceClass="com.heihe.crm.ICustomerService"-->
                  <!--address="http://39.106.104.216:8080/crm-bos/service/customer">-->
    <!--</jaxws:client>-->
    <jaxws:client id="crmClient"
                  serviceClass="com.heihe.crm.ICustomerService"
                  address="http://127.0.0.1:8080/crm-bos/service/customer">
    </jaxws:client>

    <!-- 配置shiro框架过滤器工厂 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 注入属性-->
        <!-- 安全管理器 -->
        <property name="securityManager" ref="securityManager"></property>
        <!-- 登录页面 -->
        <property name="loginUrl" value="/login.jsp"></property>
        <!-- 成功后跳转页面 -->
        <property name="successUrl" value="/index.jsp"></property>
        <!-- 没有权限默认跳转页面 -->
        <property name="unauthorizedUrl" value="/unauthorized.jsp"></property>
        <!-- 指定URL拦截级别策略 -->
        <property name="filterChainDefinitions">
            <value>
                /css/** = anon
                /js/** = anon
                /login.jsp = anon
                /validatecode.jsp* = anon
                /UserAction_login = anon
                /page_base_staff.action = perms["staff_list"]
                /* = authc
            </value>
        </property>
    </bean>

    <!-- 开启shiro注解支持 -->
    <bean id="defaultAdvisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
        <!-- 必须使用cglib方式为Acion创建代理对象 -->
        <property name="proxyTargetClass" value="true"></property>
    </bean>

    <!-- 配置shiro框架提供的切面，用于创建代理对象 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"></bean>

    <!-- 配置安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="bosrealm"></property>
        <!-- 注入缓存管理器 -->
        <property name="cacheManager" ref="cacheManager"></property>
    </bean>
    <!-- 注册自定义realm -->
    <bean id="bosrealm" class="com.heihe.realm.BOSRealm"></bean>

    <!-- 配置缓存管理器对象，并注入给安全管理器对象 -->
    <!-- 注册缓存管理器 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
    </bean>

    <!-- 配置定时发送邮件 -->
    <!-- 配置任务类 -->
    <bean id="myJob" class="com.heihe.mail.MailJob">
        <!-- 发送邮箱， 注册发送者，用户名，密码，服务器-->
        <property name="username" value="m18785528804@163.com"></property>
        <property name="password" value="yxm123"></property>
        <property name="smtpServer" value="smtp.163.com"></property>
    </bean>

    <!-- 配置jobDetail -->
    <bean id="myJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 用到的Job实例 -->
        <property name="targetObject">
            <ref bean="myJob"/>
        </property>
        <!-- 注册侧实例中的方法 -->
        <property name="targetMethod">
            <value>execute</value>
        </property>
    </bean>
    <!-- 配置触发器Trigger -->
    <bean id="myTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="myJobDetail"/>
        </property>
        <property name="cronExpression">
            <value>0 15 10 15 * ?</value>
        </property>
    </bean>
    <!-- 在spring中配置scheduler -->
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="myTrigger"/>
            </list>
        </property>
    </bean>

</beans>